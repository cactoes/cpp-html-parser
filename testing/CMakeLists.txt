file(GLOB_RECURSE TESTING_FILES CONFIGURE_DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/src/*)
add_executable(${PROJECT_NAME}_testing ${TESTING_FILES})
target_link_libraries(${PROJECT_NAME}_testing PRIVATE ${PROJECT_NAME})
target_include_directories(${PROJECT_NAME}_testing PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../src/include)

if(MSVC)
    target_compile_options(${PROJECT_NAME}_testing PRIVATE /W4 /D "_UNICODE")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Oxs")
    set(CMAKE_CXX20_STANDARD_COMPILE_OPTION "-std:c++20")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(${PROJECT_NAME}_testing PRIVATE -Wall -Wextra)
    target_link_libraries(${PROJECT_NAME}_testing PRIVATE ws2_32)
    target_link_libraries(${PROJECT_NAME}_testing PRIVATE crypt32)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
    set(CMAKE_CXX20_STANDARD_COMPILE_OPTION "-std=c++20")
else()
    message(FATAL_ERROR "Unsupported compiler")
endif()